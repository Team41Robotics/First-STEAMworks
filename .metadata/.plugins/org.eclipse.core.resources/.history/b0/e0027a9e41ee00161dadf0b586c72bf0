#include <Shooter.h>
#include <WPILib.h>
#define MaxVolt 1
#define MaxAngle 1


Shooter::Shooter ()
{
	timer = new Timer();
	timer->Reset();
	timer->Start();
	iCount = 0;

	dOld = 0;

	angPerVolt = MaxAngle/MaxVolt;
}

void Shooter::get_delta_time ()
{
	curr_t = timer->Get();    //unsure what units. need it in seconds.
	del_t = curr_t - old_t;
	old_t = curr_t;
}

void Shooter::aim_shooter(Encoder *encode, AnalogPotentiometer *pot, CANTalon *M_shooter)
{
	double err = getTargetAngle() - getPotAngle();

	double p = 1.0;

	double i = 0.01;

	double d = 0.1;



	iCount += err;

	double speed = p * err + i*iCount + d*(dOld - err);

	dOld = err;



	M_shooter->Set(speed);

}

getTargetAngle() //Coleman’s formula with drag

{



}

getVelocity() //also Coleman’s formula

{



}

double getAngle()

{

angle = pot->Get() * angPerVolt;

return angle;

}
}
*/
